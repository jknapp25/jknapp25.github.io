{"version":3,"sources":["components/Assessment.js","components/Item.js","components/Feed.js","components/Timeline.js","components/SideNav.js","App.js","serviceWorker.js","index.js","assets/ProfilePic.jpg","assets/josh_logo_5.png","assets/inventionofsound.jpeg","assets/libby_van.jpeg","assets/van_death.jpeg","assets/tumps_assistant.jpeg","assets/train.png","assets/best_things.jpeg","assets/kissing_ri.jpeg","assets/profile.png","assets/profile_male.png","assets/jon.jpeg","assets/resume.pdf"],"names":["Assessment","uniqueTags","items","forEach","tags","start","end","complexity","tagUsage","st","moment","en","length","diff","monthsAfterEnd","tag","i","numUsed","timeUsed","rankIndex","sortedTagsByNumUsed","Object","keys","map","key","sort","a","b","sortedTagsByTimeUsed","sortedTagsByRank","Math","round","topSix","slice","className","Table","striped","bordered","width","style","marginTop","color","size","Card","border","Body","Text","Accordion","Header","Toggle","as","Button","variant","eventKey","Collapse","Item","item","bottomMargin","title","subtitle","subtitleLink","description","link","img","lastUpdated","location","badge","badgeText","badgeVariant","people","footer","format","Img","src","pictures","Title","href","target","rel","Badge","Subtitle","pill","ListGroup","ListGroupItem","name","quote","OverlayTrigger","placement","overlay","Tooltip","id","alt","height","borderRadius","Footer","selfie","ios","logo","libby","vanDeath","assistant","train","bestThings","kissingRi","profileFemale","profileMale","jon","Feed","Work","animate","layout","contentStyle","padding","contentArrowStyle","borderRight","iconStyle","background","icon","icons","SideNav","show","activePage","setActivePage","Fade","in","Nav","activeKey","onSelect","top","display","Link","App","useState","showSidebar","setShowSidebar","showAssessment","setShowAssessment","Container","Row","Col","onClick","e","altKey","xs","onChange","isVisible","partialVisibility","Tabs","Tab","Alert","resume","download","Timeline","work","projects","type","stories","statusOrder","filter","itm","indexOf","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.cf42d71e.chunk.js","sourcesContent":["import React from \"react\";\nimport moment from \"moment\";\nimport { Accordion, Button, Card, Table } from \"react-bootstrap\";\nimport { FaMagic } from \"react-icons/fa\";\nimport { GiMagnifyingGlass } from \"react-icons/gi\";\nimport items from \"../lib/items.json\";\nexport default Assessment;\n\nfunction Assessment() {\n  let uniqueTags = {};\n\n  // get calculations\n  items.forEach(({ tags, start, end, complexity, tagUsage }) => {\n    const st = start ? moment(start) : null;\n    const en = end ? moment(end) : moment();\n    const length = en.diff(st, \"days\") || null;\n    const monthsAfterEnd = moment().diff(en, \"months\");\n\n    tags.forEach((tag, i) => {\n      if (!(tag in uniqueTags)) {\n        uniqueTags[tag] = { numUsed: 0, timeUsed: 0, rankIndex: 0 };\n      }\n\n      uniqueTags[tag].numUsed++;\n      uniqueTags[tag].timeUsed = length\n        ? length + uniqueTags[tag].timeUsed\n        : uniqueTags[tag].timeUsed;\n      uniqueTags[tag].rankIndex =\n        length && complexity && tagUsage[i]\n          ? length * complexity * tagUsage[i] -\n            0.01 * monthsAfterEnd +\n            uniqueTags[tag].rankIndex\n          : uniqueTags[tag].rankIndex;\n    });\n  });\n\n  let sortedTagsByNumUsed = Object.keys(uniqueTags)\n    .map(key => ({\n      tag: key,\n      numUsed: uniqueTags[key].numUsed\n    }))\n    .sort((a, b) => b.numUsed - a.numUsed);\n\n  let sortedTagsByTimeUsed = Object.keys(uniqueTags)\n    .map(key => ({\n      tag: key,\n      timeUsed: uniqueTags[key].timeUsed\n    }))\n    .sort((a, b) => b.timeUsed - a.timeUsed);\n\n  let sortedTagsByRank = Object.keys(uniqueTags)\n    .map(key => ({\n      tag: key,\n      rankIndex: Math.round(uniqueTags[key].rankIndex)\n    }))\n    .sort((a, b) => b.rankIndex - a.rankIndex);\n  let topSix = sortedTagsByRank.slice(0, 6);\n\n  //project length\n  //% of time skill was used (0-1)\n  //project complexity (0-1)\n  //# of projects\n  //potential: self-assessed skill level beginner, intermediate, expert from your perspective\n  //future: modifier of beginner, intermediate, expert from co-workers perspective\n\n  //(project length in days x project complexity x % of time skill was used) - (.1 x mo from end) +...+ (n projects)\n  //IO , Scrumy, storyline\n  //(200 x .9 x .6) + (40 x .6 x .75) + (20 x .7 x .75)\n\n  return (\n    <>\n      <h3 className=\"mt-5 mb-4\">Skills Assessment</h3>\n\n      <Table striped bordered className=\"mb-4\">\n        <tbody>\n          <tr>\n            <td width=\"50%\" className=\"text-center\">\n              <h1\n                className=\"display-5 font-weight-bold\"\n                style={{ marginTop: \"65px\" }}\n              >\n                {sortedTagsByRank[0].tag}\n              </h1>\n              <h5>Top Skill</h5>\n              <h6 className=\"mt-5 float-right mb-0\">\n                {sortedTagsByRank[0].rankIndex}\n              </h6>\n            </td>\n            <td width=\"50%\" className=\"p-0\">\n              <Table className=\"mb-0\">\n                <tbody>\n                  {topSix.map(({ tag, rankIndex }, i) => {\n                    if (!i) return null;\n                    return (\n                      <tr key={i}>\n                        <td className=\"border-right-0\">{tag}</td>\n                        <td className=\"text-right border-left-0\">\n                          {rankIndex}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <h5>\n        Algorithm <FaMagic color=\"red\" size=\"1em\" />\n      </h5>\n\n      <Card className=\"mb-4\" style={{ border: \"2px solid gold\" }}>\n        <Card.Body>\n          <Card.Text>\n            ((project length x project complexity x skill usage) - (.1 x months\n            after end)) +...+ [n projects] = skill ranking\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <h5>\n        Other insights <GiMagnifyingGlass color=\"purple\" size=\"1em\" />\n      </h5>\n\n      <Accordion className=\"mb-4\">\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n              Most used skills\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Table striped bordered>\n                <thead>\n                  <tr>\n                    <th>Skill</th>\n                    <th># of times used</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {sortedTagsByNumUsed.map(({ tag, numUsed }) => {\n                    return (\n                      <tr>\n                        <td>{tag}</td>\n                        <td>{numUsed}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n              Longest used skills\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body>\n              <Table striped bordered>\n                <thead>\n                  <tr>\n                    <th>Skill</th>\n                    <th>Time used</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {sortedTagsByTimeUsed.map(({ tag, timeUsed }) => {\n                    return (\n                      <tr>\n                        <td>{tag}</td>\n                        <td>{timeUsed ? timeUsed + \" days\" : \"Unknown\"}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n\n      <h5>Reasoning</h5>\n\n      <p>Skill inflation is a serious problem. Especially in Software.</p>\n      <p>\n        This page is my attempt at honestly assessing my skills to the best of\n        my ability. It is as much for you as it is for me. I realized that I\n        could use my history to help me determine how my interests are changing\n        to better predict where I want to head.\n      </p>\n      <p>\n        I am developing a simple algorithm, based on a basic work item tagging\n        strategy that can provide a more honest assessment of myself.\n      </p>\n\n      <p>\n        This above algorithm allows me to generate an index I can use to rank my\n        skills.\n      </p>\n    </>\n  );\n}\n","import React from \"react\";\nimport moment from \"moment\";\nimport {\n  Badge,\n  Card,\n  ListGroup,\n  ListGroupItem,\n  OverlayTrigger,\n  Tooltip\n} from \"react-bootstrap\";\nimport selfie from \"../assets/ProfilePic.jpg\";\nimport ios from \"../assets/inventionofsound.jpeg\";\nimport libby from \"../assets/libby_van.jpeg\";\nimport vanDeath from \"../assets/van_death.jpeg\";\nimport assistant from \"../assets/tumps_assistant.jpeg\";\nimport logo from \"../assets/josh_logo_5.png\";\nimport train from \"../assets/train.png\";\nimport bestThings from \"../assets/best_things.jpeg\";\nimport kissingRi from \"../assets/kissing_ri.jpeg\";\nimport profileFemale from \"../assets/profile.png\";\nimport profileMale from \"../assets/profile_male.png\";\nimport jon from \"../assets/jon.jpeg\";\nexport default Item;\n\nconst pictures = [\n  selfie,\n  ios,\n  logo,\n  libby,\n  vanDeath,\n  assistant,\n  train,\n  bestThings,\n  kissingRi,\n  profileFemale,\n  profileMale,\n  jon\n];\n\nfunction Item({ item, bottomMargin = \"\" }) {\n  const {\n    title,\n    subtitle,\n    subtitleLink,\n    tags,\n    description,\n    link,\n    img,\n    start,\n    end,\n    lastUpdated,\n    width,\n    location,\n    badge,\n    badgeText,\n    badgeVariant,\n    people\n  } = item;\n  const footer =\n    start && end\n      ? moment(start).format(\"MMM Y\") + \" - \" + moment(end).format(\"MMM Y\")\n      : start\n      ? moment(start).format(\"MMM Y\") + \" - Now\"\n      : end\n      ? moment(end).format(\"MMM Y\")\n      : lastUpdated\n      ? \"Last updated\" + moment(lastUpdated).format(\"MMM Y\")\n      : \"\";\n  return (\n    <Card className={`${bottomMargin} ${width}`}>\n      {img && <Card.Img variant=\"top\" src={pictures[img]} />}\n      <Card.Body>\n        <Card.Title>\n          {link ? (\n            <a href={link} target=\"_blank\" rel=\"noreferrer noopener\">\n              {title}\n            </a>\n          ) : (\n            title\n          )}\n          {badge && (\n            <Badge variant={badgeVariant} className=\"ml-2\">\n              {badgeText}\n            </Badge>\n          )}\n        </Card.Title>\n        <Card.Subtitle className=\"text-muted mb-2\">\n          {subtitleLink ? (\n            <a\n              href={subtitleLink || \"\"}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n            >\n              {subtitle}\n            </a>\n          ) : (\n            subtitle\n          )}{\" \"}\n          {location && `- ${location}`}\n        </Card.Subtitle>\n        {description && (\n          <Card.Text className={`${tags && tags.length > 0 ? \"mb-2\" : \"\"}`}>\n            {description}\n          </Card.Text>\n        )}\n        {tags && tags.length > 0 && (\n          <Card.Text>\n            <div className=\"blah\">\n              {tags.map((tag, i) => (\n                <Badge pill variant=\"transparent\" className=\"mr-2\" key={i}>\n                  {tag}\n                </Badge>\n              ))}\n            </div>\n          </Card.Text>\n        )}\n      </Card.Body>\n      {people && (\n        <ListGroup className=\"list-group-flush\">\n          <ListGroupItem>\n            {people.map(({ name, quote, img }, i) => (\n              <OverlayTrigger\n                key={i}\n                placement=\"top\"\n                overlay={\n                  <Tooltip id={`tooltip-${i}`}>{quote ? quote : name}</Tooltip>\n                }\n              >\n                <img\n                  src={pictures[img]}\n                  width=\"40px\"\n                  alt=\"Co-worker_image\"\n                  height=\"40px\"\n                  style={{ borderRadius: \"20px\" }}\n                  className=\"mr-2\"\n                />\n              </OverlayTrigger>\n            ))}\n          </ListGroupItem>\n        </ListGroup>\n      )}\n      <Card.Footer>\n        <small className=\"text-muted\">{footer}</small>\n      </Card.Footer>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport Item from \"./Item\";\nexport default Feed;\n\nfunction Feed({ items }) {\n  return items.map((item, i) => (\n    <Item item={item} bottomMargin={\"mb-4\"} key={i} />\n  ));\n}\n","import React from \"react\";\nimport Item from \"./Item\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement\n} from \"react-vertical-timeline-component\";\nimport { FaReact, FaHardHat, FaBaby } from \"react-icons/fa\";\nimport {\n  IoLogoJavascript,\n  IoIosPeople,\n  IoIosBuild,\n  IoMdMedical\n} from \"react-icons/io\";\nimport { GiMechanicalArm } from \"react-icons/gi\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport \"../App.css\";\nexport default Work;\n\nconst icons = [\n  <FaReact color=\"#61dafb\" size=\"50px\" />,\n  <IoLogoJavascript color=\"#f7df1f\" size=\"50px\" />,\n  <FaHardHat color=\"#fba15e\" size=\"50px\" />,\n  <IoIosPeople color=\"#2d5aff\" size=\"50px\" />,\n  <IoIosBuild color=\"#721c24\" size=\"50px\" />,\n  <GiMechanicalArm color=\"#000000\" size=\"50px\" />,\n  <IoMdMedical color=\"#e32525\" size=\"50px\" />,\n  <FaBaby color=\"#de56bbba\" size=\"50px\" />\n];\n\nfunction Work({ items }) {\n  return (\n    <VerticalTimeline animate={false} layout=\"1-column\">\n      {items.map((item, i) => (\n        <VerticalTimelineElement\n          contentStyle={{ padding: \"0px\" }}\n          contentArrowStyle={{\n            borderRight: \"7px solid  rgb(33, 150, 243)\"\n          }}\n          iconStyle={{ background: \"white\", color: \"white\" }}\n          icon={icons[item.icon]}\n          key={i}\n        >\n          <Item item={item} />\n        </VerticalTimelineElement>\n      ))}\n    </VerticalTimeline>\n  );\n}\n","import React from \"react\";\nimport { Nav, Fade } from \"react-bootstrap\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport \"../App.css\";\nimport logo from \"../assets/josh_logo_5.png\";\nexport default SideNav;\n\nfunction SideNav({ show, activePage, setActivePage }) {\n  return (\n    <Fade in={show}>\n      <Nav\n        activeKey={activePage}\n        onSelect={setActivePage}\n        className=\"sticky mr-3\"\n        style={{ top: \"65px\", display: \"block\" }}\n      >\n        <img\n          src={logo}\n          width=\"57\"\n          height=\"87\"\n          alt=\"Logo\"\n          className=\"mb-3 mr-3\"\n        />\n        <Nav.Item className=\"d-block\">\n          <Nav.Link eventKey=\"work\">work</Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"d-block\">\n          <Nav.Link eventKey=\"projects\">projects</Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"d-block\">\n          <Nav.Link eventKey=\"stories\">stories</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Fade>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Alert, Tabs, Tab, Container, Row, Col } from \"react-bootstrap\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport Assessment from \"./components/Assessment\";\nimport Feed from \"./components/Feed\";\nimport Timeline from \"./components/Timeline\";\nimport SideNav from \"./components/SideNav\";\nimport selfie from \"./assets/ProfilePic.jpg\";\nimport items from \"./lib/items.json\";\nimport resume from \"./assets/resume.pdf\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nexport default App;\n\nconst statusOrder = [\"Active\", \"On Hold\", \"Complete\"];\nconst projects = items\n  .filter(itm => itm.type === \"projects\")\n  .sort(\n    (a, b) =>\n      statusOrder.indexOf(a.badgeText) - statusOrder.indexOf(b.badgeText)\n  );\nconst stories = items.filter(itm => itm.type === \"stories\");\nconst work = items.filter(itm => itm.type === \"work\");\n\nfunction App() {\n  const [activePage, setActivePage] = useState(\"work\");\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showAssessment, setShowAssessment] = useState(false);\n\n  function handleTabsVisibilityChange(isVisible) {\n    setShowSidebar(!isVisible);\n  }\n\n  function handleShowAssessment(e) {\n    if (e.altKey) {\n      setShowAssessment(!showAssessment);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col className=\"text-right\">\n            {!showSidebar && (\n              <img\n                src={selfie}\n                width=\"100\"\n                height=\"100\"\n                alt=\"Profile_picture\"\n                style={{ border: \"3px solid black\" }}\n                className=\"mt-5 box align-top rounded-circle\"\n                onClick={handleShowAssessment}\n              />\n            )}\n            <SideNav\n              show={showSidebar}\n              activePage={activePage}\n              setActivePage={setActivePage}\n            />\n          </Col>\n          <Col xs={7}>\n            {showAssessment ? (\n              <Assessment />\n            ) : (\n              <>\n                <h1 className=\"display-2 mt-5\">Josh Knapp</h1>\n                <VisibilitySensor\n                  onChange={handleTabsVisibilityChange}\n                  partialVisibility={true}\n                >\n                  <Tabs\n                    id=\"controlled-tab-example\"\n                    activeKey={activePage}\n                    onSelect={setActivePage}\n                    className=\"border-0\"\n                  >\n                    <Tab\n                      eventKey=\"work\"\n                      title=\"work\"\n                      className=\"pt-4 border-0 mb-4\"\n                    >\n                      <Alert variant=\"warning\">\n                        Click{\" \"}\n                        <Alert.Link href={resume} download=\"Josh_Knapp_Resume\">\n                          here\n                        </Alert.Link>{\" \"}\n                        for Josh's resume.\n                      </Alert>\n                      <Timeline items={work} />\n                    </Tab>\n                    <Tab\n                      eventKey=\"projects\"\n                      title=\"projects\"\n                      className=\"pt-4 border-0\"\n                    >\n                      <Feed items={projects} width=\"w-50\" type=\"projects\" />\n                    </Tab>\n                    <Tab\n                      eventKey=\"stories\"\n                      title=\"stories\"\n                      className=\"pt-4 border-0\"\n                    >\n                      <Feed items={stories} width=\"\" type=\"stories\" />\n                    </Tab>\n                  </Tabs>\n                </VisibilitySensor>\n              </>\n            )}\n          </Col>\n          <Col />\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ProfilePic.a2c76f61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/josh_logo_5.a54df82b.png\";","module.exports = __webpack_public_path__ + \"static/media/inventionofsound.b17c831e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/libby_van.5d40c4b7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/van_death.705c409f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tumps_assistant.e86fe596.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/train.f722cce2.png\";","module.exports = __webpack_public_path__ + \"static/media/best_things.6257818f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kissing_ri.26cf50de.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/profile.90e9442e.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_male.67de171c.png\";","module.exports = __webpack_public_path__ + \"static/media/jon.587cfc50.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/resume.61d05946.pdf\";"],"sourceRoot":""}