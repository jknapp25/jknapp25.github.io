{"version":3,"sources":["components/Feed.js","components/Work.js","components/SideNav.js","App.js","serviceWorker.js","index.js","assets/ProfilePic.jpg","assets/josh_logo_5.png","assets/inventionofsound.jpeg","assets/libby_van.jpeg","assets/van_death.jpeg","assets/tumps_assistant.jpeg","assets/resume.pdf"],"names":["Feed","content","type","map","i","title","subtitle","tags","description","link","img","date","width","Card","className","key","Img","variant","src","pictures","Body","Title","href","target","Subtitle","Text","tag","Badge","pill","Footer","selfie","ios","logo","libby","vanDeath","assistant","Work","Alert","Link","resume","download","animate","layout","work","position","company","companyLink","location","start","present","end","icon","badge","badgeText","badgeVariant","people","contentStyle","background","color","padding","contentArrowStyle","borderRight","iconStyle","icons","style","borderBottomWidth","ListGroup","ListGroupItem","name","quote","OverlayTrigger","placement","overlay","Tooltip","id","alt","height","borderRadius","size","SideNav","show","activePage","setActivePage","Fade","in","Nav","activeKey","onSelect","top","display","Item","eventKey","App","useState","showSidebar","setShowSidebar","Container","Row","Col","border","xs","onChange","isVisible","partialVisibility","Tabs","Tab","projects","stories","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.bfeb0205.chunk.js","sourcesContent":["import React from \"react\";\nimport { Badge, Card } from \"react-bootstrap\";\nimport selfie from \"../assets/ProfilePic.jpg\";\nimport ios from \"../assets/inventionofsound.jpeg\";\nimport libby from \"../assets/libby_van.jpeg\";\nimport vanDeath from \"../assets/van_death.jpeg\";\nimport assistant from \"../assets/tumps_assistant.jpeg\";\nimport logo from \"../assets/josh_logo_5.png\";\nexport default Feed;\n\nconst pictures = [selfie, ios, logo, libby, vanDeath, assistant];\n\nfunction Feed({ content, type }) {\n  return content.map(\n    ({ title, subtitle, tags, description, link, img, date, width }, i) => {\n      return (\n        <Card className={`mb-4 ${width}`} key={i}>\n          {img && <Card.Img variant=\"top\" src={pictures[img]} />}\n          <Card.Body>\n            <Card.Title>\n              {link ? (\n                <a href={link} target=\"_blank\">\n                  {title}\n                </a>\n              ) : (\n                title\n              )}\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {subtitle}\n            </Card.Subtitle>\n            {description && (\n              <Card.Text className=\"mb-2\">{description}</Card.Text>\n            )}\n            {tags.map((tag, i) => {\n              return (\n                <Badge pill variant=\"secondary\" className=\"mr-2\" key={i}>\n                  {tag}\n                </Badge>\n              );\n            })}\n          </Card.Body>\n          <Card.Footer>\n            <small className=\"text-muted\">\n              {type === \"projects\"\n                ? \"Last Updated \" + date\n                : \"Published \" + date}\n            </small>\n          </Card.Footer>\n        </Card>\n      );\n    }\n  );\n}\n","import React from \"react\";\nimport {\n  Badge,\n  Card,\n  Alert,\n  ListGroup,\n  ListGroupItem,\n  OverlayTrigger,\n  Tooltip\n} from \"react-bootstrap\";\nimport {\n  VerticalTimeline,\n  VerticalTimelineElement\n} from \"react-vertical-timeline-component\";\nimport { FaReact, FaHardHat, FaBaby } from \"react-icons/fa\";\nimport {\n  IoLogoJavascript,\n  IoIosPeople,\n  IoIosBuild,\n  IoMdMedical\n} from \"react-icons/io\";\nimport { GiMechanicalArm } from \"react-icons/gi\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport selfie from \"../assets/ProfilePic.jpg\";\nimport resume from \"../assets/resume.pdf\";\nimport work from \"../lib/work.json\";\nexport default Work;\n\nconst icons = [\n  <FaReact color=\"#61dafb\" size=\"50px\" />,\n  <IoLogoJavascript color=\"#f7df1f\" size=\"50px\" />,\n  <FaHardHat color=\"#fba15e\" size=\"50px\" />,\n  <IoIosPeople color=\"#2d5aff\" size=\"50px\" />,\n  <IoIosBuild color=\"#721c24\" size=\"50px\" />,\n  <GiMechanicalArm color=\"#000000\" size=\"50px\" />,\n  <IoMdMedical color=\"#e32525\" size=\"50px\" />,\n  <FaBaby color=\"#de56bbba\" size=\"50px\" />\n];\n\nfunction Work() {\n  return (\n    <>\n      <Alert variant=\"warning\">\n        Click{\" \"}\n        <Alert.Link href={resume} download=\"Josh_Knapp_Resume\">\n          here\n        </Alert.Link>{\" \"}\n        for Josh's resume.\n      </Alert>\n      <VerticalTimeline animate={false} layout=\"1-column\">\n        {work.map(\n          (\n            {\n              position,\n              company,\n              companyLink,\n              location,\n              description,\n              start,\n              present,\n              end,\n              icon,\n              badge,\n              badgeText,\n              badgeVariant,\n              people,\n              tags\n            },\n            i\n          ) => {\n            return (\n              <VerticalTimelineElement\n                contentStyle={{\n                  background: \"rgb(33, 150, 243)\",\n                  color: \"#fff\",\n                  padding: \"0px\"\n                }}\n                contentArrowStyle={{\n                  borderRight: \"7px solid  rgb(33, 150, 243)\"\n                }}\n                iconStyle={{ background: \"white\", color: \"white\" }}\n                icon={icons[icon]}\n                key={i}\n              >\n                <Card\n                  className=\"text-dark\"\n                  style={{ borderBottomWidth: \"0px\" }}\n                >\n                  <Card.Body>\n                    <Card.Title>\n                      {position}\n                      {badge && (\n                        <Badge variant={badgeVariant} className=\"ml-2\">\n                          {badgeText}\n                        </Badge>\n                      )}\n                    </Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                      {companyLink ? (\n                        <a href={companyLink || \"\"} target=\"_blank\">\n                          {company}\n                        </a>\n                      ) : (\n                        company\n                      )}{\" \"}\n                      - {location}\n                    </Card.Subtitle>\n                    <Card.Text>\n                      {description}\n                      <br />\n                      {tags.map(tag => {\n                        return (\n                          <Badge pill variant=\"secondary\" className=\"mt-2 mr-2\">\n                            {tag}\n                          </Badge>\n                        );\n                      })}\n                    </Card.Text>\n                  </Card.Body>\n                  {people && (\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem>\n                        {people.map(({ name, quote }, i) => {\n                          return (\n                            <OverlayTrigger\n                              key={i}\n                              placement=\"top\"\n                              overlay={\n                                <Tooltip id={`tooltip-${i}`}>\n                                  {quote}\n                                  <br />-{name}\n                                </Tooltip>\n                              }\n                            >\n                              <img\n                                src={selfie}\n                                width=\"40px\"\n                                alt=\"Co-worker_image\"\n                                height=\"40px\"\n                                style={{ borderRadius: \"20px\" }}\n                                className=\"mr-2\"\n                              />\n                            </OverlayTrigger>\n                          );\n                        })}\n                      </ListGroupItem>\n                    </ListGroup>\n                  )}\n                  <Card.Footer>\n                    <small className=\"text-muted\">\n                      {start} {(present || end) && \"- \"}\n                      {present ? \"Present\" : end}\n                    </small>\n                  </Card.Footer>\n                </Card>\n              </VerticalTimelineElement>\n            );\n          }\n        )}\n      </VerticalTimeline>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Nav, Fade } from \"react-bootstrap\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport logo from \"../assets/josh_logo_5.png\";\nexport default SideNav;\n\nfunction SideNav({ show, activePage, setActivePage }) {\n  return (\n    <Fade in={show}>\n      <Nav\n        activeKey={activePage}\n        onSelect={setActivePage}\n        className=\"sticky mr-3\"\n        style={{ top: \"65px\", display: \"block\" }}\n      >\n        <img\n          src={logo}\n          width=\"57\"\n          height=\"87\"\n          alt=\"Logo\"\n          className=\"mb-3 mr-3\"\n        />\n        <Nav.Item className=\"d-block\">\n          <Nav.Link eventKey=\"work\">work</Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"d-block\">\n          <Nav.Link eventKey=\"projects\">projects</Nav.Link>\n        </Nav.Item>\n        <Nav.Item className=\"d-block\">\n          <Nav.Link eventKey=\"stories\">stories</Nav.Link>\n        </Nav.Item>\n      </Nav>\n    </Fade>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Tabs, Tab, Container, Row, Col } from \"react-bootstrap\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nimport Feed from \"./components/Feed\";\nimport Work from \"./components/Work\";\nimport SideNav from \"./components/SideNav\";\nimport selfie from \"./assets/ProfilePic.jpg\";\nimport projects from \"./lib/projects.json\";\nimport stories from \"./lib/stories.json\";\nimport \"react-vertical-timeline-component/style.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nexport default App;\n\nfunction App() {\n  const [activePage, setActivePage] = useState(\"work\");\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  function onChange(isVisible) {\n    setShowSidebar(!isVisible);\n  }\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col className=\"text-right\">\n            {!showSidebar && (\n              <img\n                src={selfie}\n                width=\"100\"\n                height=\"100\"\n                alt=\"Profile_picture\"\n                style={{\n                  border: \"3px solid black\"\n                }}\n                className=\"mt-5 box align-top rounded-circle\"\n              />\n            )}\n            <SideNav\n              show={showSidebar}\n              activePage={activePage}\n              setActivePage={setActivePage}\n            />\n          </Col>\n          <Col xs={7}>\n            <h1 className=\"display-2 mt-5\">Josh Knapp</h1>\n            <VisibilitySensor onChange={onChange} partialVisibility={true}>\n              <Tabs\n                id=\"controlled-tab-example\"\n                activeKey={activePage}\n                onSelect={setActivePage}\n                className=\"border-0\"\n              >\n                <Tab\n                  eventKey=\"work\"\n                  title=\"work\"\n                  className=\"pt-4 border-0 mb-4\"\n                >\n                  <Work />\n                </Tab>\n                <Tab\n                  eventKey=\"projects\"\n                  title=\"projects\"\n                  className=\"pt-4 border-0\"\n                >\n                  <Feed content={projects} width=\"w-50\" type=\"projects\" />\n                </Tab>\n                <Tab\n                  eventKey=\"stories\"\n                  title=\"stories\"\n                  className=\"pt-4 border-0\"\n                >\n                  <Feed content={stories} width=\"\" type=\"stories\" />\n                </Tab>\n              </Tabs>\n            </VisibilitySensor>\n          </Col>\n          <Col></Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ProfilePic.a2c76f61.jpg\";","module.exports = __webpack_public_path__ + \"static/media/josh_logo_5.a54df82b.png\";","module.exports = __webpack_public_path__ + \"static/media/inventionofsound.b17c831e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/libby_van.5d40c4b7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/van_death.705c409f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/tumps_assistant.e86fe596.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/resume.61d05946.pdf\";"],"sourceRoot":""}